language: java
jdk:
  - openjdk8

# The command "./gradlew assemble" failed and exited with 126 during .
before_install:
  - chmod +x gradlew

branches:
  only:
    - master

# Travis CI 서버의 Home
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

# 위에서 지정한 브랜치에 푸시되었을 때 실행할 명령어
# 프로젝트 내부에 둔 gradlew를 통해 clean & build 수행

script: "./gradlew clean build"

before_deploy:
  - mkdir -p before-deploy # zip에 포함시킬 파일들을 담을 디렉토리 생성
  - cp scripts/*.sh before-deploy/
  - cp appspec.yml before-deploy/
  - cp build/libs/*.jar before-deploy/
  - cd before-deploy && zip -r before-deploy * #before-deploy로 이동 후 전체 압축
  - cd ../ && mkdir -p deploy # 상위 디렉토리로 이동 후 deploy 디렉토리 생성
  - mkdir -p deploy
  - mv before-deploy/before-deploy.zip deploy/SpringBoot.zip # deploy로 zip파일 이동
#step1  - zip -r SpringBoot * # 현재 위치의 모든 파일을 해당 이름으로 압축, 명령어의 마지막 위치는 프로젝트 이름이어야 한다.
#step1  - mkdir -p deploy # deploy라는 디렉토리를 TravisCI가 실행중인 위치에서 생성
#step1  - mv SpringBoot.zip deploy/SpringBoot.zip

# S3로 파일 업로드 혹은 CodeDeploy로 배포 등 외부 서비스와 연동될 행위들을 선언
deploy:
  - provider: s3
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: hyunro19-springboot2-webservice
    region: ap-northeast-2
    skip_cleanup: true
    acl: private # zip 파일 접근을 private으로
    local_dir: deploy # before_deploy에서 생성한 디렉토리
    wait-until-deployed: true

  - provider: codedeploy
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: hyunro19-springboot2-webservice
    key: SpringBoot.zip
    bundle_type: zip # 압축 확장자
    application: springboot2-webservice # 웹 콘솔에서 등록한 CodeDeploy 애플리케이션
    deployment_group: springboot2-webservice-group # 웹 콘솔에서 등록한 CodeDeploy 배포그룹
    region: ap-northeast-2
    wait-until-deployed: true

# CI 실행 완료 시 메일로 알람
notifications:
  email:
    recipients:
      - hyunro19@gmail.com
